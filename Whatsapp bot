const { Sequelize } = require('sequelize')
const { existsSync } = require('fs')
const path = require('path')
const configPath = path.join(__dirname, './config.env')
const databasePath = path.join(__dirname, './database.db')
if (existsSync(configPath)) require('dotenv').config({ path: configPath })
const toBool = (x) => x == 'true'
const DATABASE_URL =
  process.env.DATABASE_URL === undefined ? databasePath : process.env.DATABASE_URL
module.exports = {
  VERSION: require('./package.json').version,
  SESSION_ID:BWM-XMD;;;H4sIAAAAAAAAA5VV27KiOBT9l7xqtXJTsepUDSgKeAFBvDA1DxECRIEgCSJ2+e9TeM7p7oeZnjM8hU2y99prrR2+g5xgihaoAePvoCjxDTLULllTIDAGahVFqARdEEIGwRjQ9V0tNnxeVxtDU7YT3Rue95obdS5yrQ4SdedQLr4tnLt3eQPPLiiqU4qD3yQsouXA7DVYv25Vpe7x9+l6NuJc/5HkZjwjZGby85Wg1xfdeAPPNiPEJc5jrUhQhkqYLlBjQ1x+DT6cnrWUj43HHNbaDE1C9a7PH94iM2LCK81AZE5Kck29asrX4MOQnVC07kkrXupHjSDVBB7MPfOl7ekS5dwI6abfmy4Xav8dPsVxjkIjRDnDrPky7wP7vEoH/OhadmqnOLuBY1p9LUyvR/ewnaCklKeamN1qLSdfA37m2dU9re47dqqWgtaT7VVwvxxCeeM7yV5N7YOQx9q1Wh6UX4Hb5adXLv+H92wV4ouwEW685ASLUZztGme5vAWGbEd4dTE3enlZzrnFQOt/Df6ATs8DvfIdX+Dv5GEW19Nitw88XR6dYotGWjm5Z2ZsNxvtJ3zIqvJ3KG0VkcOC1JWfPuaarnEe8xtFHXh3PAxFXTgY7mhXSerDD31Lso6GbJFtLucn5rni6RzfUGiGtd4/avvL1D1OD0HjTuK3V0cX1BghGHPPLihRjCkrIcMkf8VEsQtgeHNRUCL2ohdMjnVYKEd5bQ3E00qO9jiKpejMqOum93Cx43kdObK1YcHmDXRBUZIAUYpCHVNGymaFKIUxomD8519dkKM7exeuLSdwXRDhkjIvr4qUwPBT1c+PMAhIlTO3yYNJu0AlGPd/hhFjOI9py2OVwzJI8A1NEsgoGEcwpehHh6hEIRizskI/pnZCwpZ4eXjUloLAgS7IXoLgEIwBL4lcX5JGI56TxsIf9FvdZoVF8S1HDHRBDtvNoEAlJTlMQRekr3PcUOAHosQNeVGU25Nt+PkDcJs/RAzilLbE2pnTI3SimfhIRtp8rhixMokV8LPBT6e8K+E6smhDL9OoKdXx1hjUbCe7yAr05VJbFyazkmro2XyAtbd/SALGILFLn/jyZn+e2PKc22zNnix6phXEh0T1wn0Hb+nskq3ogfTU/OzN86FxGyW0Z6hl0Ov3b1d59HA6d1PB5kpOO9LDEtTWVl0QohsO0K/FpMzoUGJF6+mB01EwTPayfd2LZ2N7X/oRqQtuk05P67Tuj/xFOTvsk3C+cjqd/WahpdJsTW/CwSpmkPXIslR7MRysh8rm3cOvGUo/7i78clcrXfsaYfS6Cj40+i8p33G3hus/u7+k+Lhb/mU+Ve8SoSmfmslyggJDayy63EVefs7VprlPoXvaklPFTeXcSMDz+VcXFClkESmz9s+VnSDogpJUrX2NPCK/qTRR+obyMbkppEz5ORJbnCHKYFaAMTcUh1Jf5Abc+y67JIUOaQLGQHBkX5BbfzdKUbgMss8JA8rrqTzw/Bsk4dsFfQcAAA== || '').trim(),
  DATABASE:
    DATABASE_URL === databasePath
      ? new Sequelize({
          dialect: 'sqlite',
          storage: DATABASE_URL,
          logging: false,
        })
      : new Sequelize(DATABASE_URL, {
          dialect: 'postgres',
          ssl: true,
          protocol: 'postgres',
          dialectOptions: {
            native: true,
            ssl: { require: true, rejectUnauthorized: false },
          },
          logging: false,
        }),
  PREFIX: (process.env.PREFIX || '^[.,!]').trim(),
  SUDO: process.env.SUDO || '',
  HEROKU_APP_NAME: process.env.HEROKU_APP_NAME,
  HEROKU_API_KEY: process.env.HEROKU_API_KEY,
  BRANCH: 'master',
  STICKER_PACKNAME: process.env.STICKER_PACKNAME || '❤️, Jeremy,
  ALWAYS_ONLINE: process.env.ALWAYS_ONLINE,
  LOG_MSG: process.env.LOG_MSG || 'false',
  RMBG_KEY: process.env.RMBG_KEY || 'null',
  BAILEYS_LOG_LVL: process.env.BAILEYS_LOG_LVL || 'silent',
  LANG: (process.env.LANGUAG || 'en').toLowerCase(),
  WARN_LIMIT: process.env.WARN_LIMIT || 3,
  FORCE_LOGOUT: process.env.FORCE_LOGOUT || 'false',
  BRAINSHOP: process.env.BRAINSHOP || '159501,6pq8dPiYt7PdqHz3',
  DISABLE_BOT: process.env.DISABLE_BOT || 'null',
  ANTILINK_MSG: process.env.ANTILINK_MSG || '_Antilink Detected &mention kicked_',
  ANTISPAM_MSG: process.env.ANTISPAM_MSG || '_Antispam Detected &mention kicked_',
  ANTIWORDS_MSG: process.env.ANTIWORDS_MSG || '_AntiWord Detected &mention kicked_',
  ANTIWORDS: process.env.ANTIWORDS || 'word',
  MENTION: process.env.MENTION || '',
  MAX_UPLOAD: process.env.MAX_UPLOAD || 230,
  REJECT_CALL: process.env.REJECT_CALL,
  VPS: toBool(process.env.VPS),
  AUTO_STATUS_VIEW: (process.env.AUTO_STATUS_VIEW || 'false').trim(),
  SEND_READ: process.env.SEND_READ,
  KOYEB: toBool(process.env.KOYEB),
  KOYEB_NAME: (process.env.KOYEB_NAME || '').trim(),
  KOYEB_API: (process.env.KOYEB_API || '').trim(),
  AJOIN: process.env.AJOIN || 'false',
  GPT: (process.env.GPT || 'free').trim(),
  MODEL: (process.env.MODEL || 'gpt-3.5-turbo').trim(),
  APPROVE: (process.env.APPROVE || '').trim(),
  ANTI_DELETE: (process.env.ANTI_DELETE || 'null').trim(),
  PERSONAL_MESSAGE: (process.env.PERSONAL_MESSAGE || 'null').trim(),
  DISABLE_START_MESSAGE: process.env.DISABLE_START_MESSAGE || 'false',
  ANTI_BOT: (process.env.ANTI_BOT || 'off').trim(),
  ANTI_BOT_MESSAGE: process.env.ANTI_BOT_MESSAGE || '&mention removed',
  WARN_MESSAGE:
    process.env.WARN_MESSAGE ||
    '⚠️WARNING⚠️\n*User :* &mention\n*Warn :* &warn\n*Remaining :* &remaining',
  WARN_RESET_MESSAGE:
    process.env.WARN_RESET_MESSAGE || `WARN RESET\nUser : &mention\nRemaining : &remaining`,
  WARN_KICK_MESSAGE: process.env.WARN_KICK_MESSAGE || '&mention kicked',
  TRUECALLER: process.env.TRUECALLER,
  DELETE_TYPE: (process.env.DELETE_TYPE || '').trim(),
  LIST_TYPE: (process.env.LIST_TYPE || 'text').trim(),
  BING_COOKIE: (process.env.BING_COOKIE || '').trim(),
  GEMINI_API_KEY: (process.env.GEMINI_API_KEY || '').trim(),
  GROUP_ADMINS: process.env.GROUP_ADMINS || '',
  RENDER_NAME: (process.env.RENDER_NAME || '').trim(),
  RENDER_API_KEY: (process.env.RENDER_API_KEY || '').trim(),
  TIMEZONE: process.env.TIMEZONE,
  CMD_REACTION: process.env.CMD_REACTION || 'false',
  AUTO_UPDATE: process.env.AUTO_UPDATE || 'false',
  WHITE_LIST: process.env.WHITE_LIST || '',
  BOT_LANG: process.env.BOT_LANG || 'english',
  YT_COOKIE: process.env.YT_COOKIE,
}const { Sequelize } = require('sequelize')
const { existsSync } = require('fs')
const path = require('path')
const configPath = path.join(__dirname, './config.env')
const databasePath = path.join(__dirname, './database.db')
if (existsSync(configPath)) require('dotenv').config({ path: configPath })
const toBool = (x) => x == 'true'
const DATABASE_URL =
  process.env.DATABASE_URL === undefined ? databasePath : process.env.DATABASE_URL
module.exports = {
  VERSION: require('./package.json').version,
  SESSION_ID: (process.env.SESSION_ID || 'BWM-XMD;;;H4sIAAAAAAAAA5VV27KiOBT9l7xqtXJTsepUDSgKeAFBvDA1DxECRIEgCSJ2+e9TeM7p7oeZnjM8hU2y99prrR2+g5xgihaoAePvoCjxDTLULllTIDAGahVFqARdEEIGwRjQ9V0tNnxeVxtDU7YT3Rue95obdS5yrQ4SdedQLr4tnLt3eQPPLiiqU4qD3yQsouXA7DVYv25Vpe7x9+l6NuJc/5HkZjwjZGby85Wg1xfdeAPPNiPEJc5jrUhQhkqYLlBjQ1x+DT6cnrWUj43HHNbaDE1C9a7PH94iM2LCK81AZE5Kck29asrX4MOQnVC07kkrXupHjSDVBB7MPfOl7ekS5dwI6abfmy4Xav8dPsVxjkIjRDnDrPky7wP7vEoH/OhadmqnOLuBY1p9LUyvR/ewnaCklKeamN1qLSdfA37m2dU9re47dqqWgtaT7VVwvxxCeeM7yV5N7YOQx9q1Wh6UX4Hb5adXLv+H92wV4ouwEW685ASLUZztGme5vAWGbEd4dTE3enlZzrnFQOt/Df6ATs8DvfIdX+Dv5GEW19Nitw88XR6dYotGWjm5Z2ZsNxvtJ3zIqvJ3KG0VkcOC1JWfPuaarnEe8xtFHXh3PAxFXTgY7mhXSerDD31Lso6GbJFtLucn5rni6RzfUGiGtd4/avvL1D1OD0HjTuK3V0cX1BghGHPPLihRjCkrIcMkf8VEsQtgeHNRUCL2ohdMjnVYKEd5bQ3E00qO9jiKpejMqOum93Cx43kdObK1YcHmDXRBUZIAUYpCHVNGymaFKIUxomD8519dkKM7exeuLSdwXRDhkjIvr4qUwPBT1c+PMAhIlTO3yYNJu0AlGPd/hhFjOI9py2OVwzJI8A1NEsgoGEcwpehHh6hEIRizskI/pnZCwpZ4eXjUloLAgS7IXoLgEIwBL4lcX5JGI56TxsIf9FvdZoVF8S1HDHRBDtvNoEAlJTlMQRekr3PcUOAHosQNeVGU25Nt+PkDcJs/RAzilLbE2pnTI3SimfhIRtp8rhixMokV8LPBT6e8K+E6smhDL9OoKdXx1hjUbCe7yAr05VJbFyazkmro2XyAtbd/SALGILFLn/jyZn+e2PKc22zNnix6phXEh0T1wn0Hb+nskq3ogfTU/OzN86FxGyW0Z6hl0Ov3b1d59HA6d1PB5kpOO9LDEtTWVl0QohsO0K/FpMzoUGJF6+mB01EwTPayfd2LZ2N7X/oRqQtuk05P67Tuj/xFOTvsk3C+cjqd/WahpdJsTW/CwSpmkPXIslR7MRysh8rm3cOvGUo/7i78clcrXfsaYfS6Cj40+i8p33G3hus/u7+k+Lhb/mU+Ve8SoSmfmslyggJDayy63EVefs7VprlPoXvaklPFTeXcSMDz+VcXFClkESmz9s+VnSDogpJUrX2NPCK/qTRR+obyMbkppEz5ORJbnCHKYFaAMTcUh1Jf5Abc+y67JIUOaQLGQHBkX5BbfzdKUbgMss8JA8rrqTzw/Bsk4dsFfQcAAA==').trim(),
  DATABASE:
    DATABASE_URL === databasePath
      ? new Sequelize({
          dialect: 'sqlite',
          storage: DATABASE_URL,
          logging: false,
        })
      : new Sequelize(DATABASE_URL, {
          dialect: 'postgres',
          ssl: true,
          protocol: 'postgres',
          dialectOptions: {
            native: true,
            ssl: { require: true, rejectUnauthorized: false },
          },
          logging: false,
        }),
  PREFIX: (process.env.PREFIX || '^[.,!]').trim(),
  SUDO: process.env.SUDO || '',
  HEROKU_APP_NAME: process.env.HEROKU_APP_NAME,
  HEROKU_API_KEY: process.env.HEROKU_API_KEY,
  BRANCH: 'master',
  STICKER_PACKNAME: process.env.STICKER_PACKNAME || '❤️,LyFE',
  ALWAYS_ONLINE: process.env.ALWAYS_ONLINE,
  LOG_MSG: process.env.LOG_MSG || 'false',
  RMBG_KEY: process.env.RMBG_KEY || 'null',
  BAILEYS_LOG_LVL: process.env.BAILEYS_LOG_LVL || 'silent',
  LANG: (process.env.LANGUAG || 'en').toLowerCase(),
  WARN_LIMIT: process.env.WARN_LIMIT || 3,
  FORCE_LOGOUT: process.env.FORCE_LOGOUT || 'false',
  BRAINSHOP: process.env.BRAINSHOP || '159501,6pq8dPiYt7PdqHz3',
  DISABLE_BOT: process.env.DISABLE_BOT || 'null',
  ANTILINK_MSG: process.env.ANTILINK_MSG || '_Antilink Detected &mention kicked_',
  ANTISPAM_MSG: process.env.ANTISPAM_MSG || '_Antispam Detected &mention kicked_',
  ANTIWORDS_MSG: process.env.ANTIWORDS_MSG || '_AntiWord Detected &mention kicked_',
  ANTIWORDS: process.env.ANTIWORDS || 'word',
  MENTION: process.env.MENTION || '',
  MAX_UPLOAD: process.env.MAX_UPLOAD || 230,
  REJECT_CALL: process.env.REJECT_CALL,
  VPS: toBool(process.env.VPS),
  AUTO_STATUS_VIEW: (process.env.AUTO_STATUS_VIEW || 'false').trim(),
  SEND_READ: process.env.SEND_READ,
  KOYEB: toBool(process.env.KOYEB),
  KOYEB_NAME: (process.env.KOYEB_NAME || '').trim(),
  KOYEB_API: (process.env.KOYEB_API || '').trim(),
  AJOIN: process.env.AJOIN || 'false',
  GPT: (process.env.GPT || 'free').trim(),
  MODEL: (process.env.MODEL || 'gpt-3.5-turbo').trim(),
  APPROVE: (process.env.APPROVE || '').trim(),
  ANTI_DELETE: (process.env.ANTI_DELETE || 'null').trim(),
  PERSONAL_MESSAGE: (process.env.PERSONAL_MESSAGE || 'null').trim(),
  DISABLE_START_MESSAGE: process.env.DISABLE_START_MESSAGE || 'false',
  ANTI_BOT: (process.env.ANTI_BOT || 'off').trim(),
  ANTI_BOT_MESSAGE: process.env.ANTI_BOT_MESSAGE || '&mention removed',
  WARN_MESSAGE:
    process.env.WARN_MESSAGE ||
    '⚠️WARNING⚠️\n*User :* &mention\n*Warn :* &warn\n*Remaining :* &remaining',
  WARN_RESET_MESSAGE:
    process.env.WARN_RESET_MESSAGE || `WARN RESET\nUser : &mention\nRemaining : &remaining`,
  WARN_KICK_MESSAGE: process.env.WARN_KICK_MESSAGE || '&mention kicked',
  TRUECALLER: process.env.TRUECALLER,
  DELETE_TYPE: (process.env.DELETE_TYPE || '').trim(),
  LIST_TYPE: (process.env.LIST_TYPE || 'text').trim(),
  BING_COOKIE: (process.env.BING_COOKIE || '').trim(),
  GEMINI_API_KEY: (process.env.GEMINI_API_KEY || '').trim(),
  GROUP_ADMINS: process.env.GROUP_ADMINS || '',
  RENDER_NAME: (process.env.RENDER_NAME || '').trim(),
  RENDER_API_KEY: (process.env.RENDER_API_KEY || '').trim(),
  TIMEZONE: process.env.TIMEZONE,
  CMD_REACTION: process.env.CMD_REACTION || 'false',
  AUTO_UPDATE: process.env.AUTO_UPDATE || 'true',
  WHITE_LIST: process.env.WHITE_LIST || '',
  BOT_LANG: process.env.BOT_LANG || 'english',
  YT_COOKIE: process.env.YT_COOKIE,
}
